{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "p-d.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PD",
          "members": [
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n"
                },
                {
                  "name": "propDef"
                },
                {
                  "name": "nv"
                }
              ]
            },
            {
              "kind": "method",
              "name": "valFromEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "filterEvent",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "field",
              "name": "observedElement"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "p-d",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "onInitVal",
          "parameters": [
            {
              "name": "{ initVal, self }"
            }
          ]
        },
        {
          "kind": "function",
          "name": "handleEvent",
          "parameters": [
            {
              "name": "{ val, lastEvent, parseValAs, self }"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "str0"
        },
        {
          "kind": "variable",
          "name": "str1"
        },
        {
          "kind": "variable",
          "name": "bool1"
        },
        {
          "kind": "class",
          "description": "",
          "name": "PassDown",
          "superclass": {
            "name": "PD"
          },
          "tagName": "pass-down",
          "customElement": true,
          "attributes": [
            {
              "name": "debug",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "log",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "on",
              "type": {
                "text": "string | undefined"
              },
              "description": "The event name to monitor for, from previous non-petalian element.",
              "fieldName": "on",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "to",
              "type": {
                "text": "string | undefined"
              },
              "description": "css pattern to match for from downstream siblings.",
              "fieldName": "to",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "care-of",
              "type": {
                "text": "string | undefined"
              },
              "description": "CSS Selector to use to select single child within the destination element.",
              "fieldName": "careOf",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "noblock",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Don't block event propagation.",
              "fieldName": "noblock",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "ifTargetMatches",
              "type": {
                "text": "string | undefined"
              },
              "description": "Only act on event if target element css-matches the expression specified by this attribute.",
              "fieldName": "ifTargetMatches",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "prop",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of property to set on matching (downstream) siblings.",
              "fieldName": "prop",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "prop-from-event",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dynamically determined name of property to set on matching (downstream) siblings from event object.",
              "fieldName": "propFromEvent",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "val",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies path to JS object from event, that should be passed to downstream siblings.  Value of '.' passes entire entire object.",
              "fieldName": "val",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "observe",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies element to latch on to, and listen for events.\r\nSearches previous siblings, parent, previous siblings of parent, etc.\r\nStops at Shadow DOM boundary.",
              "fieldName": "observe",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "fire-event",
              "type": {
                "text": "string | undefined"
              },
              "description": "Artificially fire event on target element whose name is specified by this attribute.",
              "fieldName": "fireEvent",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "is",
              "static": true,
              "default": "p-d",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "self",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "_sym",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "on",
              "type": {
                "text": "string | undefined"
              },
              "description": "The event name to monitor for, from previous non-petalian element.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "to",
              "type": {
                "text": "string | undefined"
              },
              "description": "css pattern to match for from downstream siblings.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "careOf",
              "type": {
                "text": "string | undefined"
              },
              "description": "CSS Selector to use to select single child within the destination element.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "noblock",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Don't block event propagation.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "ifTargetMatches",
              "type": {
                "text": "string | undefined"
              },
              "description": "Only act on event if target element css-matches the expression specified by this attribute.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "prop",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of property to set on matching (downstream) siblings.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "propFromEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dynamically determined name of property to set on matching (downstream) siblings from event object.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "val",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies path to JS object from event, that should be passed to downstream siblings.  Value of '.' passes entire entire object.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "observe",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies element to latch on to, and listen for events.\r\nSearches previous siblings, parent, previous siblings of parent, etc.\r\nStops at Shadow DOM boundary.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "fireEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "Artificially fire event on target element whose name is specified by this attribute.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "initVal",
              "type": {
                "text": "string | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "initEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "In some cases, the initVal can only be obtained after initEvent fires",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "debug",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "log",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "async",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "parseValAs",
              "type": {
                "text": "'int' | 'float' | 'bool' | 'date' | 'truthy' | 'falsy' | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "capture",
              "type": {
                "text": "boolean"
              },
              "description": "A Boolean indicating that events of this type will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "previousOn",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastEvent",
              "type": {
                "text": "Event | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastVal",
              "type": {
                "text": "any"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "as",
              "type": {
                "text": "asAttr"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "cloneVal",
              "type": {
                "text": "boolean | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "m",
              "type": {
                "text": "number | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "from",
              "type": {
                "text": "string | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "handleEvent",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "method",
              "name": "valFromEvent",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterEvent",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "mutateEvents",
              "type": {
                "text": "string[] | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "_wr",
              "type": {
                "text": "WeakRef<Element> | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "observedElement",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PD",
          "declaration": {
            "name": "PD",
            "module": "p-d.js"
          }
        },
        {
          "kind": "js",
          "name": "onInitVal",
          "declaration": {
            "name": "onInitVal",
            "module": "p-d.js"
          }
        },
        {
          "kind": "js",
          "name": "handleEvent",
          "declaration": {
            "name": "handleEvent",
            "module": "p-d.js"
          }
        },
        {
          "kind": "js",
          "name": "str0",
          "declaration": {
            "name": "str0",
            "module": "p-d.js"
          }
        },
        {
          "kind": "js",
          "name": "str1",
          "declaration": {
            "name": "str1",
            "module": "p-d.js"
          }
        },
        {
          "kind": "js",
          "name": "bool1",
          "declaration": {
            "name": "bool1",
            "module": "p-d.js"
          }
        },
        {
          "kind": "js",
          "name": "PassDown",
          "declaration": {
            "name": "PassDown",
            "module": "p-d.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "p-d.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PD",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "static": true,
              "default": "p-d"
            },
            {
              "kind": "field",
              "name": "self"
            },
            {
              "kind": "field",
              "name": "propActions"
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              }
            },
            {
              "kind": "field",
              "name": "_sym"
            },
            {
              "kind": "field",
              "name": "on",
              "type": {
                "text": "string | undefined"
              },
              "description": "The event name to monitor for, from previous non-petalian element."
            },
            {
              "kind": "field",
              "name": "to",
              "type": {
                "text": "string | undefined"
              },
              "description": "css pattern to match for from downstream siblings."
            },
            {
              "kind": "field",
              "name": "careOf",
              "type": {
                "text": "string | undefined"
              },
              "description": "CSS Selector to use to select single child within the destination element."
            },
            {
              "kind": "field",
              "name": "noblock",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Don't block event propagation."
            },
            {
              "kind": "field",
              "name": "ifTargetMatches",
              "type": {
                "text": "string | undefined"
              },
              "description": "Only act on event if target element css-matches the expression specified by this attribute."
            },
            {
              "kind": "field",
              "name": "prop",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of property to set on matching (downstream) siblings."
            },
            {
              "kind": "field",
              "name": "propFromEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dynamically determined name of property to set on matching (downstream) siblings from event object."
            },
            {
              "kind": "field",
              "name": "val",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies path to JS object from event, that should be passed to downstream siblings.  Value of '.' passes entire entire object."
            },
            {
              "kind": "field",
              "name": "observe",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies element to latch on to, and listen for events.\r\nSearches previous siblings, parent, previous siblings of parent, etc.\r\nStops at Shadow DOM boundary."
            },
            {
              "kind": "field",
              "name": "fireEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "Artificially fire event on target element whose name is specified by this attribute."
            },
            {
              "kind": "field",
              "name": "initVal",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "initEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "In some cases, the initVal can only be obtained after initEvent fires"
            },
            {
              "kind": "field",
              "name": "debug",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "log",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "async",
              "type": {
                "text": "boolean"
              }
            },
            {
              "kind": "field",
              "name": "parseValAs",
              "type": {
                "text": "'int' | 'float' | 'bool' | 'date' | 'truthy' | 'falsy' | undefined"
              }
            },
            {
              "kind": "field",
              "name": "capture",
              "type": {
                "text": "boolean"
              },
              "description": "A Boolean indicating that events of this type will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree."
            },
            {
              "kind": "field",
              "name": "previousOn",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "lastEvent",
              "type": {
                "text": "Event | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "lastVal",
              "type": {
                "text": "any"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "as",
              "type": {
                "text": "asAttr"
              }
            },
            {
              "kind": "field",
              "name": "cloneVal",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "kind": "field",
              "name": "m",
              "type": {
                "text": "number | undefined"
              }
            },
            {
              "kind": "field",
              "name": "from",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "handleEvent"
            },
            {
              "kind": "method",
              "name": "valFromEvent",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "filterEvent",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "mutateEvents",
              "type": {
                "text": "string[] | undefined"
              }
            },
            {
              "kind": "field",
              "name": "_wr",
              "type": {
                "text": "WeakRef<Element> | undefined"
              }
            },
            {
              "kind": "field",
              "name": "observedElement"
            }
          ],
          "attributes": [
            {
              "name": "debug"
            },
            {
              "name": "log"
            },
            {
              "name": "on",
              "type": {
                "text": "string | undefined"
              },
              "description": "The event name to monitor for, from previous non-petalian element.",
              "fieldName": "on"
            },
            {
              "name": "to",
              "type": {
                "text": "string | undefined"
              },
              "description": "css pattern to match for from downstream siblings.",
              "fieldName": "to"
            },
            {
              "name": "care-of",
              "type": {
                "text": "string | undefined"
              },
              "description": "CSS Selector to use to select single child within the destination element.",
              "fieldName": "careOf"
            },
            {
              "name": "noblock",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Don't block event propagation.",
              "fieldName": "noblock"
            },
            {
              "name": "ifTargetMatches",
              "type": {
                "text": "string | undefined"
              },
              "description": "Only act on event if target element css-matches the expression specified by this attribute.",
              "fieldName": "ifTargetMatches"
            },
            {
              "name": "prop",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of property to set on matching (downstream) siblings.",
              "fieldName": "prop"
            },
            {
              "name": "prop-from-event",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dynamically determined name of property to set on matching (downstream) siblings from event object.",
              "fieldName": "propFromEvent"
            },
            {
              "name": "val",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies path to JS object from event, that should be passed to downstream siblings.  Value of '.' passes entire entire object.",
              "fieldName": "val"
            },
            {
              "name": "observe",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies element to latch on to, and listen for events.\r\nSearches previous siblings, parent, previous siblings of parent, etc.\r\nStops at Shadow DOM boundary.",
              "fieldName": "observe"
            },
            {
              "name": "fire-event",
              "type": {
                "text": "string | undefined"
              },
              "description": "Artificially fire event on target element whose name is specified by this attribute.",
              "fieldName": "fireEvent"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "p-d",
          "customElement": true
        },
        {
          "kind": "function",
          "name": "onInitVal",
          "parameters": [
            {
              "name": "{initVal, self}",
              "type": {
                "text": "PD"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "handleEvent",
          "parameters": [
            {
              "name": "{val, lastEvent, parseValAs, self}",
              "type": {
                "text": "PD"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "str0",
          "type": {
            "text": "PropDef"
          }
        },
        {
          "kind": "variable",
          "name": "str1",
          "type": {
            "text": "PropDef"
          }
        },
        {
          "kind": "variable",
          "name": "bool1",
          "type": {
            "text": "PropDef"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "PassDown",
          "members": [
            {
              "kind": "field",
              "name": "is",
              "static": true,
              "default": "pass-down"
            },
            {
              "kind": "field",
              "name": "self",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "propActions",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "reactor",
              "type": {
                "text": "IReactor"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "_sym",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "on",
              "type": {
                "text": "string | undefined"
              },
              "description": "The event name to monitor for, from previous non-petalian element.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "to",
              "type": {
                "text": "string | undefined"
              },
              "description": "css pattern to match for from downstream siblings.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "careOf",
              "type": {
                "text": "string | undefined"
              },
              "description": "CSS Selector to use to select single child within the destination element.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "noblock",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Don't block event propagation.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "ifTargetMatches",
              "type": {
                "text": "string | undefined"
              },
              "description": "Only act on event if target element css-matches the expression specified by this attribute.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "prop",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of property to set on matching (downstream) siblings.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "propFromEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dynamically determined name of property to set on matching (downstream) siblings from event object.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "val",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies path to JS object from event, that should be passed to downstream siblings.  Value of '.' passes entire entire object.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "observe",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies element to latch on to, and listen for events.\r\nSearches previous siblings, parent, previous siblings of parent, etc.\r\nStops at Shadow DOM boundary.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "fireEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "Artificially fire event on target element whose name is specified by this attribute.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "initVal",
              "type": {
                "text": "string | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "initEvent",
              "type": {
                "text": "string | undefined"
              },
              "description": "In some cases, the initVal can only be obtained after initEvent fires",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "debug",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "log",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "async",
              "type": {
                "text": "boolean"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "parseValAs",
              "type": {
                "text": "'int' | 'float' | 'bool' | 'date' | 'truthy' | 'falsy' | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "capture",
              "type": {
                "text": "boolean"
              },
              "description": "A Boolean indicating that events of this type will be dispatched to the registered listener before being dispatched to any EventTarget beneath it in the DOM tree.",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "previousOn",
              "type": {
                "text": "string | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastEvent",
              "type": {
                "text": "Event | undefined"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "lastVal",
              "type": {
                "text": "any"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "as",
              "type": {
                "text": "asAttr"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "cloneVal",
              "type": {
                "text": "boolean | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "m",
              "type": {
                "text": "number | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "from",
              "type": {
                "text": "string | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "method",
              "name": "onPropChange",
              "parameters": [
                {
                  "name": "n",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "propDef",
                  "type": {
                    "text": "PropDef"
                  }
                },
                {
                  "name": "nv",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "handleEvent",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "method",
              "name": "valFromEvent",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "method",
              "name": "filterEvent",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "mutateEvents",
              "type": {
                "text": "string[] | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "_wr",
              "type": {
                "text": "WeakRef<Element> | undefined"
              },
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "kind": "field",
              "name": "observedElement",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            }
          ],
          "superclass": {
            "name": "PD"
          },
          "tagName": "pass-down",
          "customElement": true,
          "attributes": [
            {
              "name": "debug",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "log",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "on",
              "type": {
                "text": "string | undefined"
              },
              "description": "The event name to monitor for, from previous non-petalian element.",
              "fieldName": "on",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "to",
              "type": {
                "text": "string | undefined"
              },
              "description": "css pattern to match for from downstream siblings.",
              "fieldName": "to",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "care-of",
              "type": {
                "text": "string | undefined"
              },
              "description": "CSS Selector to use to select single child within the destination element.",
              "fieldName": "careOf",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "noblock",
              "type": {
                "text": "boolean | undefined"
              },
              "description": "Don't block event propagation.",
              "fieldName": "noblock",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "ifTargetMatches",
              "type": {
                "text": "string | undefined"
              },
              "description": "Only act on event if target element css-matches the expression specified by this attribute.",
              "fieldName": "ifTargetMatches",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "prop",
              "type": {
                "text": "string | undefined"
              },
              "description": "Name of property to set on matching (downstream) siblings.",
              "fieldName": "prop",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "prop-from-event",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dynamically determined name of property to set on matching (downstream) siblings from event object.",
              "fieldName": "propFromEvent",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "val",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies path to JS object from event, that should be passed to downstream siblings.  Value of '.' passes entire entire object.",
              "fieldName": "val",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "observe",
              "type": {
                "text": "string | undefined"
              },
              "description": "Specifies element to latch on to, and listen for events.\r\nSearches previous siblings, parent, previous siblings of parent, etc.\r\nStops at Shadow DOM boundary.",
              "fieldName": "observe",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            },
            {
              "name": "fire-event",
              "type": {
                "text": "string | undefined"
              },
              "description": "Artificially fire event on target element whose name is specified by this attribute.",
              "fieldName": "fireEvent",
              "inheritedFrom": {
                "name": "PD",
                "module": "p-d.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PD",
          "declaration": {
            "name": "PD",
            "module": "p-d.ts"
          }
        },
        {
          "kind": "js",
          "name": "onInitVal",
          "declaration": {
            "name": "onInitVal",
            "module": "p-d.ts"
          }
        },
        {
          "kind": "js",
          "name": "handleEvent",
          "declaration": {
            "name": "handleEvent",
            "module": "p-d.ts"
          }
        },
        {
          "kind": "js",
          "name": "str0",
          "declaration": {
            "name": "str0",
            "module": "p-d.ts"
          }
        },
        {
          "kind": "js",
          "name": "str1",
          "declaration": {
            "name": "str1",
            "module": "p-d.ts"
          }
        },
        {
          "kind": "js",
          "name": "bool1",
          "declaration": {
            "name": "bool1",
            "module": "p-d.ts"
          }
        },
        {
          "kind": "js",
          "name": "PassDown",
          "declaration": {
            "name": "PassDown",
            "module": "p-d.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pdUtils.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getFrom",
          "parameters": [
            {
              "name": "self"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isMatchAfterFrom",
          "parameters": [
            {
              "name": "match"
            },
            {
              "name": "self"
            }
          ]
        },
        {
          "kind": "function",
          "name": "addDefaultMutObs",
          "parameters": [
            {
              "name": "self"
            }
          ]
        },
        {
          "kind": "function",
          "name": "handleValChange",
          "parameters": [
            {
              "name": "{ lastVal, self, to, careOf, m, from, prop }"
            }
          ]
        },
        {
          "kind": "function",
          "name": "attachMutationEventHandler",
          "parameters": [
            {
              "name": "{ mutateEvents, self }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getFrom",
          "declaration": {
            "name": "getFrom",
            "module": "pdUtils.js"
          }
        },
        {
          "kind": "js",
          "name": "isMatchAfterFrom",
          "declaration": {
            "name": "isMatchAfterFrom",
            "module": "pdUtils.js"
          }
        },
        {
          "kind": "js",
          "name": "addDefaultMutObs",
          "declaration": {
            "name": "addDefaultMutObs",
            "module": "pdUtils.js"
          }
        },
        {
          "kind": "js",
          "name": "handleValChange",
          "declaration": {
            "name": "handleValChange",
            "module": "pdUtils.js"
          }
        },
        {
          "kind": "js",
          "name": "attachMutationEventHandler",
          "declaration": {
            "name": "attachMutationEventHandler",
            "module": "pdUtils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pdUtils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getFrom",
          "parameters": [
            {
              "name": "self",
              "type": {
                "text": "PDToFrom"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isMatchAfterFrom",
          "parameters": [
            {
              "name": "match",
              "type": {
                "text": "Element"
              }
            },
            {
              "name": "self",
              "type": {
                "text": "PDToFrom"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "addDefaultMutObs",
          "parameters": [
            {
              "name": "self",
              "type": {
                "text": "PDToFrom"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "handleValChange",
          "parameters": [
            {
              "name": "{lastVal, self, to, careOf, m, from, prop}",
              "type": {
                "text": "PDToFrom"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "attachMutationEventHandler",
          "parameters": [
            {
              "name": "{mutateEvents, self}",
              "type": {
                "text": "PDToFrom"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getFrom",
          "declaration": {
            "name": "getFrom",
            "module": "pdUtils.ts"
          }
        },
        {
          "kind": "js",
          "name": "isMatchAfterFrom",
          "declaration": {
            "name": "isMatchAfterFrom",
            "module": "pdUtils.ts"
          }
        },
        {
          "kind": "js",
          "name": "addDefaultMutObs",
          "declaration": {
            "name": "addDefaultMutObs",
            "module": "pdUtils.ts"
          }
        },
        {
          "kind": "js",
          "name": "handleValChange",
          "declaration": {
            "name": "handleValChange",
            "module": "pdUtils.ts"
          }
        },
        {
          "kind": "js",
          "name": "attachMutationEventHandler",
          "declaration": {
            "name": "attachMutationEventHandler",
            "module": "pdUtils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "types.d.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "test/test.js",
      "declarations": [],
      "exports": []
    }
  ]
}

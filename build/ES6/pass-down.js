import{observeCssSelector}from"./node_modules/xtal-latx/observeCssSelector.js";import{define}from"./node_modules/xtal-latx/define.js";import{qsa}from"./node_modules/xtal-latx/qsa.js";const p_d_on="p-d-on",p_d_rules="p-d-rules",p_d_if="p-d-if",pass_to="pass-to",pass_to_next="pass-to-next",and_to="and-to",and_to_next="and-to-next";export class PassDown extends observeCssSelector(HTMLElement){static get is(){return"pass-down"}connectedCallback(){this.style.display="none";this._conn=!0;this.onPropsChange()}insertListener(e){if(e.animationName===PassDown.is){const target=e.target;setTimeout(()=>{this.parse(target)},0)}}onPropsChange(){if(!this._conn)return;this.addCSSListener(PassDown.is,"[data-on]",this.insertListener)}toLHSRHS(s){const pos=s.indexOf(":");return{lhs:s.substr(0,pos),rhs:s.substr(pos+1)}}parseBr(s){return s.split("{").map(t=>t.endsWith("}")?t.substr(0,t.length-1):t)}parse(target){console.log(target);const on=target.dataset.on.split(" "),rules={};let rule;on.forEach(tkn=>{const token=tkn.trim();if(""===token)return;if(token.endsWith(":")){rule={};rules[token.substr(0,token.length-1)]=rule}else{switch(token){case"skip-init":rule.skipInit=!0;break;default:if(token.startsWith("if(")){console.log("TODO")}else{const lhsRHS=this.toLHSRHS(token),lhs=lhsRHS.lhs;switch(lhs){case pass_to:case pass_to_next:rule.map=[];break;}const cssProp={};rule.map.push(cssProp);switch(lhs){case pass_to_next:case and_to_next:cssProp.max=1;cssProp.isNext=!0;break;}const rhs=this.parseBr(lhsRHS.rhs);let vals;if(!cssProp.isNext){cssProp.max=parseInt(rhs[2]);vals=rhs[1];cssProp.cssSelector=rhs[0]}else{vals=rhs[1]}cssProp.setProps=[];vals.split(";").forEach(val=>{const lR=this.toLHSRHS(val);cssProp.setProps.push({propSource:lR.rhs,propTarget:lR.lhs})})}}}});target[p_d_rules]=rules;setTimeout(()=>this.initTarget(target),50)}initTarget(target){console.log({target:target,rules:target[p_d_rules]});this.attchEvListnrs(target);this.addMutObs(target)}addMutObs(target){let elToObs=target.parentElement;if(!elToObs.__addedMutObs){const obs=new MutationObserver(()=>{qsa("[data-on]",elToObs).forEach(el=>{const rules=el[p_d_rules];if(rules){for(const key in rules){const rule=rules[key];if(rule.lastEvent){this._hndEv(rule.lastEvent)}}}})});obs.observe(elToObs,{childList:!0,subtree:!0})}}attchEvListnrs(target){const rules=target[p_d_rules];for(const key in rules){const rule=rules[key];target.addEventListener(key,this._hndEv);if(!rule.skipInit){const fakeEvent={type:key,isFake:!0,detail:target.value,target:target};this._hndEv(fakeEvent)}}target.removeAttribute("disabled")}_hndEv(e){const target=e.target,rule=target[p_d_rules][e.type];if(rule.if&&!e.target.matches(rule.if))return;rule.lastEvent=e;this.passDown(target,e,rule,0,target)}passDown(start,e,rule,count,original){let nextSib=start;while(nextSib){if("SCRIPT"!==nextSib.tagName){rule.map.forEach(map=>{if(map.isNext||nextSib.matches&&nextSib.matches(map.cssSelector)){count++;this.setVal(e,nextSib,map)}const fec=nextSib.firstElementChild;if(fec&&nextSib.hasAttribute(p_d_if)){const pdIF=nextSib.getAttribute(p_d_if);if(pdIF){if(original.matches(pdIF)){this.passDown(fec,e,rule,count,original)}}}})}nextSib=nextSib.nextElementSibling}}setVal(e,target,map){map.setProps.forEach(setProp=>{const propFromEvent=this.getPropFromPath(e,setProp.propSource);this.commit(target,setProp.propTarget,propFromEvent)})}commit(target,key,val){target[key]=val}getPropFromPath(val,path){if(!path||"."===path)return val;return this.getProp(val,path.split("."))}getProp(val,pathTokens){let context=val,firstToken=!0;const cp="composedPath";pathTokens.forEach(token=>{if(context){if(firstToken&&context[cp]){firstToken=!1;const cpath=token.split(cp+"_");if(1===cpath.length){context=context[cpath[0]]}else{context=context[cp]()[parseInt(cpath[1])]}}else{context=context[token]}}});return context}}define(PassDown);